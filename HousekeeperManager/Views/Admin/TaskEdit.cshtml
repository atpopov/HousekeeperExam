@model Data.Model.Task
@using Data.Enumeration

@{
    ViewBag.Title = "TaskEdit";
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <title>Flight Manager</title>
    <link rel="stylesheet" type="text/css" href="~/Content/reset-css.css">
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/Content/style.css">
    <link rel="jssheet" href="~/Content/script.js">
</head>

<body>
    <header>
        <nav class="navbar flightm-color">

            <h1 style="float:none; text-align:center"><a href="/Admin/Home">Housekeeper Manager</a></h1>
            <ul>
                <li> <a class="active" style="float:left; margin-left:2%; text-align:center" href="/Admin/Users">Users</a></li>
                <li> <a class="active" style="float:left; margin-left:2%; text-align:center" href="/Admin/Tasks">Tasks</a></li>
                <li> <a class="active" style="float:left; margin-left:2%; text-align:center" href="/Admin/Locations">Locations</a></li>
            </ul>
            <ul>
                <li> <a class="active" style="float:right; margin-right:2%; text-align:center">Welcome, Admin!</a></li>
                <li> <a class="active" href="/Home/Logout" style="float:right; margin-right:2%; text-align:center">Logout</a></li>
            </ul>
        </nav>
    </header>

    <div class="jumbotron mt-3 flightm-color">
        <h4 style="text-align:center">Task with Id @Model.Id</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                Name
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                Description
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                Location Id
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LocationId)
            </dd>

            <dt>
                Deadline
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DeadLine)
            </dd>
            <dt>
                Category
            </dt>


            <dd>
                @Html.DisplayFor(model => model.Category)
            </dd>
            <dt>
                Budget
            </dt>


            <dd>
                @Html.DisplayFor(model => model.Budget)
            </dd>
            <dt>
                Status
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Status)
            </dd>
            <dt>
                ImageUrl
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ImageUrl)
            </dd>
            <dt>
                Date of assignment
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DateOfAssignment)
            </dd>
        </dl>
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="text-align:center">Edit Task</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Category",
        new SelectList(Enum.GetValues(typeof(CategoryEnum))),
        "Select Category",
        new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status",
            new SelectList(Enum.GetValues(typeof(StatusEnum))),
            "Select Status",
            new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfAssignment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfAssignment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfAssignment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

</body>
